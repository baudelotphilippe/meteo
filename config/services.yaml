# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    openweather.api_key: '%env(OPENWEATHER_API_KEY)%'
    weatherapi.key: '%env(WEATHERAPI_KEY)%'
    meteo_name: '%env(METEO_NAME)%'
    meteo_latitude: '%env(float:METEO_LATITUDE)%'
    meteo_longitude: '%env(float:METEO_LONGITUDE)%'
    meteo_timezone: '%env(METEO_TIMEZONE)%'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $meteo_cache: '%env(METEO_CACHE)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Services avec paramètre API (keys)
    App\Service\ApiSources\OpenWeatherService:
        arguments:
            $apiKey: '%openweather.api_key%'
    App\Service\ApiSources\WeatherApiService:
        arguments:
            $apiKey: '%weatherapi.key%'

    # Agrégateur météo : injection des providers
    App\Service\Weather\WeatherAggregator:
        arguments:
            $providers: !tagged_iterator app.weather_provider

    # Agrégateur prévision du jour : injection des providers
    App\Service\HourlyForecast\HourlyForecastAggregator:
        arguments:
            $providers: !tagged_iterator app.hourly_forecast

    # Agrégateur prévisions : injection des providers
    App\Service\Forecast\ForecastAggregator:
        arguments:
            $providers: !tagged_iterator app.forecast_provider
